// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  inventory   Int      @default(0)
  fabrics     Fabric[] @relation("ProductFabrics")
  orderItems  OrderItem[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Fabric {
  id        String   @id @default(uuid())
  name      String
  swatchUrl String?
  pricePerFoot Float
  products  Product[] @relation("ProductFabrics")
  orderItems OrderItem[]
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String  @unique
  address   String?
  phone     String?
  orders    Order[]
  createdAt DateTime @default(now())
}

model Order {
  id         String      @id @default(uuid())
  customer   Customer?  @relation(fields: [customerId], references: [id])
  customerId String?
  items      OrderItem[]
  total      Float
  status     String     @default("pending")
  createdAt  DateTime   @default(now())
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  fabric    Fabric?  @relation(fields: [fabricId], references: [id])
  fabricId  String?
  width     Float?
  length    Float?
  height    Float?
  price     Float
  quantity  Int      @default(1)
}

model AdminUser {
  id       String   @id @default(uuid())
  email    String  @unique
  password String
  name     String?
  createdAt DateTime @default(now())
}
